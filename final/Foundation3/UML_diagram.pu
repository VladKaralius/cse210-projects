@startuml UML_diagram

'--Formatting options--
hide circle
hide empty members
'skinparam classAttributeIconSize 0
skinparam style strictuml
'skinparam groupInheritance 2
'skinparam linetype ortho
'skinparam Nodesep 15
'skinparam Ranksep 25
'left to right direction

'--Styling--
'skinparam BackgroundColor White/LightGreen
skinparam TitleFontSize 22

<style>
classDiagram {
  class {
    '-attributes and methods-
    'FontSize 14
    'FontColor black
    'BackgroundColor #fefece
    BackgroundColor #f0fff0
    'RoundCorner 0
    '-class name-
    header {
      'FontSize 12
      'FontColor Black
      FontStyle bold
      BackgroundColor YellowGreen
    }

    ' Alternative class style 1
    .gaming {
      BackgroundColor Bisque
      header {
        BackgroundColor Orange
      }
    }

    ' Alternative class style 2
    .auxiliary {
      BackgroundColor #eeeeee
      header {
        BackgroundColor #cccccc
      }
    }
  }
  
  ' note {
  '   BackgroundColor Yellow
  ' }
  legend {
    FontSize 18
  }
</style>

'--Header, title, caption--
header By Vladislovas Karalius, created with PlantUML, 2023-03-16
title Final Project - Program 3: Inheritance with Event Planning

'--Main--
abstract class Event {
  # _title : string
  # _description : string
  # _date : string
  # _time : string
  # _address : Address
  + Event(title : string, description : string,\ndate : string, time : string, address : string)
  + SetAddress(streetAddress : string, city : string\nstate : string, country : string)
  + GetStandardDetails() : string
  + GetShortDescription() : string
  + {abstract} GetFullDetails() : string
  # GetEventType() : string
}

class Address {
  - _streetAddress : string
  - _city : string
  - _state : string
  - _country : string
  + Address(streetAddress : string, city : string\nstate : string, country : string)
  + GetFullAddress() : string
}

class LectureEvent extends Event {
- _speakerName : string
- _capacity : int
+ LectureEvent(title : string, description : string,\ndate : string, time : string, address : string\nspeakerName :string, capacity : int)
+ <<override>> GetFullDetails() : string
}

class ReceptionEvent extends Event {
- _responseEmail : string
+ ReceptionEvent(title : string, description : string,\ndate : string, time : string, address : string\nresponseEmail : string)
+ <<override>> GetFullDetails() : string
}

class OutdoorEvent extends Event {
- _weatherForecast : string
+ OutdoorEvent(title : string, description : string,\ndate : string, time : string, address : string\nweatherForecast : string)
+ <<override>> GetFullDetails() : string
}

class SampleDataGenerator <<auxiliary>> {
  - _titles : string[]
  - _currentTitlesIndex : int = 0
  - _descriptions : string[]
  - _currentDescriptionsIndex : int = 0
  - _emails : string[]
  - _curentEmailsIndex : int = 0
  - _weatherForecasts : string[]
  - _currentWeatherForecastsIndex : int = 0
  - _names : string[]
  - _currentNamesIndex : int = 0
  - _countries : string[]
  - _currentCountriesIndex : int = 0
  - _states : string[]
  - _currentStatesIndex : int = 0
  - _statesUSA : string[]
  - _currentStatesUSAIndex : int = 0
  - _cities : string[]
  - _currentCitiesIndex : int = 0
  - _streets : string[]
  - _currentStreetsIndex : int = 0
  + GetNextTitle() : string
  + GetNextDescription() : string
  + GetNextEmail() : string
  + GetNextWeatherForecast() : string
  + GetNextName() : string
  + GetNextCountry() : string
  + GetNextState() : string
  + GetNextStateUSA() : string
  + GetNextStreet() : string
  - Shuffle() : void
}

note as Note1
I did not use polymorphism here.
As I uderstand, we should focus
purely on inheritance in this
program and leave the polymorphism
for the next task.
endnote

Event .> Address
Event .l[hidden] Note1
LectureEvent .[hidden]. SampleDataGenerator


'--Description--
' legend bottom
' <size:22>__**Core Requirements**__
' The program has one base class **Activity**. This class contains the attributes and methods
' that are common to all activities. Certain functions are put into separate classes as follows:
' endlegend

@enduml