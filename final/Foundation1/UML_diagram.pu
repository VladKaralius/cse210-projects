@startuml UML_diagram

'--Formatting options--
hide circle
hide empty members
'skinparam classAttributeIconSize 0
skinparam style strictuml
'skinparam groupInheritance 2
'skinparam linetype ortho
'skinparam Nodesep 15
'skinparam Ranksep 25
'left to right direction

'--Styling--
'skinparam BackgroundColor White/LightGreen
skinparam TitleFontSize 22

<style>
classDiagram {
  class {
    '-attributes and methods-
    'FontSize 14
    'FontColor black
    'BackgroundColor #fefece
    BackgroundColor #f0fff0
    'RoundCorner 0
    '-class name-
    header {
      'FontSize 12
      'FontColor Black
      FontStyle bold
      BackgroundColor YellowGreen
    }

    ' Alternative class style 1
    .gaming {
      BackgroundColor Bisque
      header {
        BackgroundColor Orange
      }
    }

    ' Alternative class style 2
    .auxiliary {
      BackgroundColor #eeeeee
      header {
        BackgroundColor #cccccc
      }
    }
  }
  note {
    BackgroundColor Yellow
  }
  legend {
    FontSize 18
  }
</style>

'--Header, title, caption--
header By Vladislovas Karalius, created with PlantUML, 2023-03-16
title Final Project - Program 1: Abstraction with YouTube Videos
'caption <:warning:>Constructors without parameters are not shown in this diagram

' Dummy class that explains visibility symbols
' class Markers #dddddd {
' Attributes
' ..
' - private
' # protected
' + public
' {static} static
' --
' Methods
' ..
' - private()
' # protected()
' + public()
' {static} static()
' }

'--Main--
class Video {
  - _title : string
  - _author : string
  - _length : int
  - _comments : List<Comment>
  __
  + Video(title : string, author : string, length : int)
  + GetCommentCount() : int
  + AddComment(name : string, text : string) : void
  ..Getters..
  + GetTitle() : string
  + GetAuthor() : string
  + GetLength() : int
  + GetComments() : List<Comment>
}

class Comment {
  - _name : string
  - _text : string
  __
  + Comment(name : string, text : string)
  ..Getters..
  + GetName() : string
  + GetText() : string
}

Video o- Comment

class SampleDataGenerator <<auxiliary>> {
  - _titles : string[]
  - _currentTitleIndex : int = 0
  - _names : string[]
  - _currentNamesIndex : int = 0
  - _texts : string[]
  - _currentTextsIndex : int = 0
  + SampleDataGenerator()
  + GetNextTitle() : string
  + GetNextName() : string
  + GetNextText() : string
}

Video .[hidden]. SampleDataGenerator

'--Description--
' legend bottom
' <size:22>__**Core Requirements**__
' The program has one base class **Activity**. This class contains the attributes and methods
' that are common to all activities. Certain functions are put into separate classes as follows:
' endlegend

@enduml